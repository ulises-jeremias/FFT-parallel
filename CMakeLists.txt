cmake_minimum_required(VERSION 3.0)

FILE(STRINGS "VERSION" FFT_VERSION)

PROJECT(fft
	LANGUAGES C
VERSION ${FFT_VERSION})

# TODO: Figure out a way to do this without hardcoding the flags
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fopenmp")

INCLUDE(${CMAKE_SOURCE_DIR}/cmake/CPackConfig.cmake)
CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/fft.spec.in" "${CMAKE_CURRENT_BINARY_DIR}/fft.spec" @ONLY IMMEDIATE)
SET(CPACK_RPM_USER_BINARY_SPECFILE "${CMAKE_CURRENT_BINARY_DIR}/fft.spec")
SET(CPACK_PACKAGE_RELEASE 2)
SET(CPACK_RPM_PACKAGE_SOURCES ON)
INCLUDE(CPack)

ADD_SUBDIRECTORY("fft")

OPTION(FFT_BUILD_BENCHMARKS "Build benchmarks" ON)
IF(FFT_BUILD_BENCHMARKS)
	ADD_SUBDIRECTORY("benchmark")
ENDIF()

OPTION(FFT_BUILD_TESTS "Build unit tests" ON)
IF(FFT_BUILD_TESTS)
	enable_testing()
	ADD_SUBDIRECTORY("test")
ENDIF(FFT_BUILD_TESTS)

INSTALL(FILES "${CMAKE_CURRENT_SOURCE_DIR}/README.md" DESTINATION share/doc/libscic-fft/)
INSTALL(FILES "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE" DESTINATION share/licenses/libscic-fft/)
